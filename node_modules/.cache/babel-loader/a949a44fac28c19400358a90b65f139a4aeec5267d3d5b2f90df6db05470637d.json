{"ast":null,"code":"var _jsxFileName = \"/Users/drashtipatel/Desktop/projectexpl/frontend/src/components/ProtectedRoute.js\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  role,\n  roles\n}) => {\n  const user = JSON.parse(localStorage.getItem('user')); // assuming user object is stored after login\n\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this); // redirect to login\n  }\n\n  // If a single role is required\n  // if (role && user.role !== role) {\n  //   return <Navigate to=\"/unauthorized\" />;\n  // }\n\n  // If multiple roles are allowed\n  if (roles && !roles.includes(user.role)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/unauthorized\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","role","roles","user","JSON","parse","localStorage","getItem","to","fileName","_jsxFileName","lineNumber","columnNumber","includes","_c","$RefreshReg$"],"sources":["/Users/drashtipatel/Desktop/projectexpl/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\n\nconst ProtectedRoute = ({ children, role, roles }) => {\n  const user = JSON.parse(localStorage.getItem('user')); // assuming user object is stored after login\n\n  if (!user) {\n    return <Navigate to=\"/\" />; // redirect to login\n  }\n\n  // If a single role is required\n  // if (role && user.role !== role) {\n  //   return <Navigate to=\"/unauthorized\" />;\n  // }\n\n  // If multiple roles are allowed\n  if (roles && !roles.includes(user.role)) {\n    return <Navigate to=\"/unauthorized\" />;\n  }\n\n  return children;\n};\n\nexport default ProtectedRoute;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,IAAI;EAAEC;AAAM,CAAC,KAAK;EACpD,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEvD,IAAI,CAACJ,IAAI,EAAE;IACT,oBAAOL,OAAA,CAACF,QAAQ;MAACY,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC,CAAC;EAC9B;;EAEA;EACA;EACA;EACA;;EAEA;EACA,IAAIV,KAAK,IAAI,CAACA,KAAK,CAACW,QAAQ,CAACV,IAAI,CAACF,IAAI,CAAC,EAAE;IACvC,oBAAOH,OAAA,CAACF,QAAQ;MAACY,EAAE,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACxC;EAEA,OAAOZ,QAAQ;AACjB,CAAC;AAACc,EAAA,GAlBIf,cAAc;AAoBpB,eAAeA,cAAc;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}