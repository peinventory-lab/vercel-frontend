{"ast":null,"code":"// backend/routes/inventoryRoutes.js\nconst express = require('express');\nconst router = express.Router();\nconst InventoryItem = require('../models/InventoryItem');\n\n// POST /api/inventory/add - Add a new inventory item\nrouter.post('/add', async (req, res) => {\n  try {\n    const {\n      name,\n      quantity,\n      location,\n      description\n    } = req.body;\n    const newItem = new InventoryItem({\n      name,\n      quantity,\n      location,\n      description\n    });\n    await newItem.save();\n    res.status(201).json({\n      message: 'Item added successfully',\n      item: newItem\n    });\n  } catch (err) {\n    console.error('❌ Error adding item:', err);\n    res.status(500).json({\n      message: 'Failed to add item'\n    });\n  }\n});\n\n// GET /api/inventory/all - Fetch all inventory items\nrouter.get('/all', async (req, res) => {\n  try {\n    const items = await InventoryItem.find();\n    res.status(200).json(items);\n  } catch (err) {\n    console.error('❌ Error fetching inventory:', err);\n    res.status(500).json({\n      message: 'Failed to fetch inventory'\n    });\n  }\n});\n\n// DELETE /api/inventory/delete/:id - Delete an item by ID\nrouter.delete('/delete/:id', async (req, res) => {\n  try {\n    await InventoryItem.findByIdAndDelete(req.params.id);\n    res.status(200).json({\n      message: 'Item deleted successfully'\n    });\n  } catch (err) {\n    console.error('❌ Error deleting item:', err);\n    res.status(500).json({\n      message: 'Failed to delete item'\n    });\n  }\n});\n\n// PUT /api/inventory/edit/:id - Update an item by ID\nrouter.put('/edit/:id', async (req, res) => {\n  try {\n    const {\n      name,\n      quantity,\n      location,\n      description\n    } = req.body;\n    const updatedItem = await InventoryItem.findByIdAndUpdate(req.params.id, {\n      name,\n      quantity,\n      location,\n      description\n    }, {\n      new: true\n    });\n    res.status(200).json({\n      message: 'Item updated successfully',\n      item: updatedItem\n    });\n  } catch (err) {\n    console.error('❌ Error updating item:', err);\n    res.status(500).json({\n      message: 'Failed to update item'\n    });\n  }\n});\n\n// GET /api/inventory/filter?location=A1 - Filter items by location\nrouter.get('/filter', async (req, res) => {\n  try {\n    const {\n      location\n    } = req.query;\n    const filteredItems = await InventoryItem.find({\n      location\n    });\n    res.status(200).json(filteredItems);\n  } catch (err) {\n    console.error('❌ Error filtering items:', err);\n    res.status(500).json({\n      message: 'Failed to filter inventory'\n    });\n  }\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","InventoryItem","post","req","res","name","quantity","location","description","body","newItem","save","status","json","message","item","err","console","error","get","items","find","delete","findByIdAndDelete","params","id","put","updatedItem","findByIdAndUpdate","new","query","filteredItems","module","exports"],"sources":["/Users/drashtipatel/Desktop/projectexpl/frontend/src/pages/InventoryPage.js"],"sourcesContent":["// backend/routes/inventoryRoutes.js\nconst express = require('express');\nconst router = express.Router();\nconst InventoryItem = require('../models/InventoryItem');\n\n// POST /api/inventory/add - Add a new inventory item\nrouter.post('/add', async (req, res) => {\n  try {\n    const { name, quantity, location, description } = req.body;\n\n    const newItem = new InventoryItem({\n      name,\n      quantity,\n      location,\n      description\n    });\n\n    await newItem.save();\n    res.status(201).json({ message: 'Item added successfully', item: newItem });\n  } catch (err) {\n    console.error('❌ Error adding item:', err);\n    res.status(500).json({ message: 'Failed to add item' });\n  }\n});\n\n// GET /api/inventory/all - Fetch all inventory items\nrouter.get('/all', async (req, res) => {\n  try {\n    const items = await InventoryItem.find();\n    res.status(200).json(items);\n  } catch (err) {\n    console.error('❌ Error fetching inventory:', err);\n    res.status(500).json({ message: 'Failed to fetch inventory' });\n  }\n});\n\n// DELETE /api/inventory/delete/:id - Delete an item by ID\nrouter.delete('/delete/:id', async (req, res) => {\n  try {\n    await InventoryItem.findByIdAndDelete(req.params.id);\n    res.status(200).json({ message: 'Item deleted successfully' });\n  } catch (err) {\n    console.error('❌ Error deleting item:', err);\n    res.status(500).json({ message: 'Failed to delete item' });\n  }\n});\n\n// PUT /api/inventory/edit/:id - Update an item by ID\nrouter.put('/edit/:id', async (req, res) => {\n  try {\n    const { name, quantity, location, description } = req.body;\n    const updatedItem = await InventoryItem.findByIdAndUpdate(\n      req.params.id,\n      { name, quantity, location, description },\n      { new: true }\n    );\n    res.status(200).json({ message: 'Item updated successfully', item: updatedItem });\n  } catch (err) {\n    console.error('❌ Error updating item:', err);\n    res.status(500).json({ message: 'Failed to update item' });\n  }\n});\n\n// GET /api/inventory/filter?location=A1 - Filter items by location\nrouter.get('/filter', async (req, res) => {\n  try {\n    const { location } = req.query;\n    const filteredItems = await InventoryItem.find({ location });\n    res.status(200).json(filteredItems);\n  } catch (err) {\n    console.error('❌ Error filtering items:', err);\n    res.status(500).json({ message: 'Failed to filter inventory' });\n  }\n});\n\nmodule.exports = router;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}